/* ===== PALET WARNA & VARIABEL ===== */
:root {
  --bg-dark: #1A1625;
  --card-bg: #231E31;
  --card-bg-gradient: linear-gradient(145deg, #2a243b, #1f1a2c);
  --card-border: rgba(255, 255, 255, 0.08);
  --text-light: #F2F2F7;
  --text-muted: #AEAEB2;
  --text-dark: #1d1d1f;
  --accent-magenta: #d946ef;
  --accent-blue: #5A8DEE;
  --success: #34C759;
  --danger: #FF3B30;
}

/* ===== RESET & GLOBAL ===== */
body {
  font-family: 'Rubik', sans-serif;
  background-color: var(--bg-dark);
  color: var(--text-light);
  margin-top: 80px; /* Space for fixed navbar */
}

.container {
  max-width: 960px;
  margin: 0 auto;
  padding: 0 15px;
}

.d-none { display: none !important; }

/* ===== NAVBAR ===== */
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: rgba(26, 22, 37, 0.8);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  padding: 1rem 0;
  z-index: 1000;
  border-bottom: 1px solid var(--card-border);
}

.navbar .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.navbar-brand {
  font-weight: 700;
  font-size: 1.7rem;
  color: var(--text-light);
  text-decoration: none;
}

.navbar-menu {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.balance-display {
  background: rgba(0,0,0,0.2);
  padding: 5px 8px 5px 12px;
  border-radius: 12px;
  display: flex;
  align-items: center;
  gap: 8px;
  border: 1px solid var(--card-border);
}

.balance-display small {
  font-size: 0.7rem;
  color: var(--text-muted);
}

.balance-display span {
  font-weight: 500;
  color: var(--text-light);
}

.btn-topup {
  background-color: var(--accent-blue);
  color: white;
  border: none;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  font-size: 1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.user-profile img {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 2px solid var(--accent-magenta);
}


/* ===== KONTEN UTAMA ===== */
main.container {
  padding-top: 30px;
  padding-bottom: 30px;
}

.main-card {
  background: var(--card-bg);
  border-radius: 20px;
  padding: 25px 30px;
  margin-bottom: 25px;
  border: 1px solid var(--card-border);
  box-shadow: 0 8px 30px rgba(0,0,0,0.1);
}

.main-card h4 {
  font-weight: 500;
  margin-bottom: 5px;
}
.main-card p.text-muted {
    font-size: 0.9rem;
}

/* ===== FORM PEMBELIAN ===== */
.search-container {
    position: relative;
    margin: 25px 0;
}
.search-container i {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-muted);
}
#search-service {
    width: 100%;
    background-color: rgba(0,0,0,0.2);
    border: 1px solid var(--card-border);
    border-radius: 12px;
    padding: 12px 15px 12px 45px;
    color: var(--text-light);
    font-size: 1rem;
}
#search-service:focus {
    outline: none;
    border-color: var(--accent-magenta);
}

.service-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 15px;
}

.service-card {
    background: var(--card-bg-gradient);
    border: 1px solid var(--card-border);
    border-radius: 12px;
    padding: 15px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    transition: all 0.2s ease-in-out;
}
.service-card:hover {
    transform: translateY(-5px);
    border-color: var(--accent-magenta);
}

.service-info {
    display: flex;
    align-items: center;
    gap: 12px;
}
.service-icon {
    font-size: 2.2rem;
}
.service-details .name {
    font-weight: 500;
    display: block;
}
.service-details .stock {
    font-size: 0.8rem;
    color: var(--text-muted);
}
.service-price {
    text-align: right;
}
.service-price .price {
    font-weight: 500;
    color: var(--success);
}
.service-price .buy-btn {
    background: var(--accent-magenta);
    color: white;
    border: none;
    border-radius: 8px;
    padding: 6px 15px;
    font-size: 0.8rem;
    font-weight: 500;
    cursor: pointer;
    margin-top: 5px;
}

/* Skeleton Loader */
.skeleton-loader {
    background-color: rgba(255,255,255,0.05);
    border-radius: 12px;
    height: 70px;
    animation: pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
@keyframes pulse {
    50% { opacity: .5; }
}


/* ===== ORDER AKTIF ===== */
.active-order-grid {
    display: grid;
    grid-template-columns: 2fr 1fr 2fr;
    gap: 20px;
    margin: 20px 0;
}
.info-box label {
    display: block;
    font-size: 0.8rem;
    color: var(--text-muted);
    margin-bottom: 8px;
}
.value-display {
    background-color: rgba(0,0,0,0.2);
    padding: 12px 15px;
    border-radius: 12px;
    font-weight: 500;
    font-size: 1.1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.timer-display {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--accent-magenta);
}
#copy-number-btn, #copy-otp-btn {
    background: none;
    border: none;
    color: var(--text-muted);
    cursor: pointer;
    font-size: 1.2rem;
}

.action-buttons {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
}
.btn {
    border: none;
    padding: 10px 20px;
    border-radius: 10px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
}
.btn-primary {
    background-color: var(--accent-magenta);
    color: white;
}
.btn-primary:hover {
    background-color: #c735de;
}
.btn-outline {
    background-color: transparent;
    border: 1px solid var(--card-border);
    color: var(--text-muted);
}
.btn-outline:hover {
    background-color: rgba(255,255,255,0.1);
    color: var(--text-light);
}

/* ===== RIWAYAT ===== */
.view-all-link {
    color: var(--accent-blue);
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 500;
}
.history-table {
    width: 100%;
    border-collapse: collapse;
}
.history-table th, .history-table td {
    padding: 12px 5px;
    text-align: left;
    font-size: 0.9rem;
}
.history-table thead {
    border-bottom: 1px solid var(--card-border);
}
.history-table th {
    color: var(--text-muted);
    font-weight: 500;
}
.status-badge {
    padding: 4px 10px;
    border-radius: 8px;
    font-size: 0.8rem;
    font-weight: 500;
}
.status-success {
    background-color: rgba(52, 199, 89, 0.1);
    color: var(--success);
}
.status-canceled {
    background-color: rgba(255, 59, 48, 0.1);
    color: var(--danger);
}


/* ===== FOOTER ===== */
.footer {
    padding: 20px 0;
    text-align: center;
    color: var(--text-muted);
    font-size: 0.9rem;
    border-top: 1px solid var(--card-border);
    margin-top: 30px;
}

/* ===== RESPONSIVE ===== */
@media (max-width: 768px) {
    .active-order-grid {
        grid-template-columns: 1fr;
    }
    .timer-display { font-size: 2rem; }
    .main-card { padding: 20px; }
}

@media (max-width: 576px) {
    .balance-display small, .balance-display span { display: none; }
    .balance-display { padding: 5px; }
    .navbar-menu { gap: 1rem; }
}```

---

### 3. `script.js` (Fungsi & Interaksi)

File ini yang membuat halaman menjadi hidup dan dinamis.

```javascript
document.addEventListener('DOMContentLoaded', function() {
    
    // ===== DATA SIMULASI (Ganti dengan API call jika sudah ada backend) =====
    const services = [
        { id: 1, name: 'WhatsApp', icon: 'bxl-whatsapp', stock: 120, price: 950 },
        { id: 2, name: 'Telegram', icon: 'bxl-telegram', stock: 250, price: 1200 },
        { id: 3, name: 'Gojek', icon: 'bx-car', stock: 88, price: 1500 },
        { id: 4, name: 'Google', icon: 'bxl-google', stock: 430, price: 800 },
        { id: 5, name: 'Grab', icon: 'bx-car', stock: 50, price: 1500 },
        { id: 6, name: 'Facebook', icon: 'bxl-facebook-circle', stock: 310, price: 750 },
        { id: 7, name: 'TikTok', icon: 'bxl-tiktok', stock: 150, price: 1100 },
        { id: 8, name: 'Shopee', icon: 'bx-shopping-bag', stock: 95, price: 1300 },
    ];
    
    const history = [
        { service: 'WhatsApp', number: '+62 812***1111', status: 'Selesai' },
        { service: 'Google', number: '+62 812***2222', status: 'Dibatalkan' },
        { service: 'Gojek', number: '+62 812***3333', status: 'Selesai' },
    ];


    // ===== VARIABEL & ELEMENT DOM =====
    const serviceListContainer = document.getElementById('service-list');
    const searchInput = document.getElementById('search-service');
    const orderFormSection = document.getElementById('order-form-section');
    const activeOrderSection = document.getElementById('active-order-section');
    const historyTableBody = document.getElementById('history-table-body');
    
    let countdownInterval;

    // ===== FUNGSI-FUNGSI =====

    /**
     * Menampilkan daftar layanan ke halaman.
     * @param {Array} servicesToRender - Array berisi objek layanan.
     */
    function renderServices(servicesToRender) {
        serviceListContainer.innerHTML = ''; // Kosongkan dulu
        if (servicesToRender.length === 0) {
            serviceListContainer.innerHTML = `<p class="text-muted">Layanan tidak ditemukan.</p>`;
            return;
        }

        servicesToRender.forEach(service => {
            const card = document.createElement('div');
            card.className = 'service-card';
            card.innerHTML = `
                <div class="service-info">
                    <i class='bx ${service.icon} service-icon'></i>
                    <div class="service-details">
                        <span class="name">${service.name}</span>
                        <span class="stock">Stok: ${service.stock}</span>
                    </div>
                </div>
                <div class="service-price">
                    <span class="price">Rp ${service.price.toLocaleString('id-ID')}</span>
                    <button class="buy-btn" data-id="${service.id}">Beli</button>
                </div>
            `;
            serviceListContainer.appendChild(card);
        });
        
        // Tambahkan event listener ke tombol "Beli" yang baru dibuat
        document.querySelectorAll('.buy-btn').forEach(button => {
            button.addEventListener('click', handleBuyClick);
        });
    }

    /**
     * Menampilkan riwayat pesanan
     */
    function renderHistory() {
        historyTableBody.innerHTML = '';
        history.forEach(item => {
            const statusClass = item.status === 'Selesai' ? 'status-success' : 'status-canceled';
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${item.service}</td>
                <td>${item.number}</td>
                <td><span class="status-badge ${statusClass}">${item.status}</span></td>
                <td>Baru saja</td>
            `;
            historyTableBody.appendChild(row);
        });
    }

    /**
     * Menangani klik pada tombol "Beli"
     * @param {Event} event
     */
    function handleBuyClick(event) {
        const serviceId = parseInt(event.target.dataset.id);
        const service = services.find(s => s.id === serviceId);

        if (service) {
            // Sembunyikan form pembelian, tampilkan order aktif
            orderFormSection.classList.add('d-none');
            activeOrderSection.classList.remove('d-none');
            
            // Isi detail order
            document.getElementById('active-order-title').textContent = `Menunggu SMS untuk ${service.name}...`;
            document.getElementById('virtual-number').textContent = `+62 8${Math.floor(100000000 + Math.random() * 900000000)}`;
            document.getElementById('otp-code').textContent = "Menunggu SMS...";
            document.getElementById('otp-code').classList.add('text-muted');

            // Mulai timer
            startCountdown(5 * 60); // 5 menit

            // Simulasi OTP masuk setelah beberapa detik
            setTimeout(() => {
                receiveOTP('123456');
            }, 8000); // Terima OTP setelah 8 detik
        }
    }

    /**
     * Memulai timer hitung mundur.
     * @param {number} duration - Durasi dalam detik.
     */
    function startCountdown(duration) {
        clearInterval(countdownInterval);
        let timer = duration;
        const timerDisplay = document.getElementById('countdown-timer');

        countdownInterval = setInterval(() => {
            const minutes = Math.floor(timer / 60);
            let seconds = timer % 60;
            seconds = seconds < 10 ? '0' + seconds : seconds;
            
            timerDisplay.textContent = `${minutes}:${seconds}`;

            if (--timer < 0) {
                clearInterval(countdownInterval);
                timerDisplay.textContent = "Expired";
                // Handle order expired
            }
        }, 1000);
    }
    
    /**
     * Menangani saat OTP diterima
     * @param {string} code - Kode OTP yang diterima
     */
    function receiveOTP(code) {
        const otpDisplay = document.getElementById('otp-code');
        const copyOtpBtn = document.getElementById('copy-otp-btn');
        
        otpDisplay.textContent = code;
        otpDisplay.classList.remove('text-muted');
        copyOtpBtn.classList.remove('d-none');
        alert(`Kode OTP Diterima: ${code}`);
    }
    
    /**
     * Menangani pembatalan order
     */
    function cancelOrder() {
        clearInterval(countdownInterval);
        activeOrderSection.classList.add('d-none');
        orderFormSection.classList.remove('d-none');
        alert('Pesanan telah dibatalkan.');
    }
    
    /**
     * Menangani penyalinan teks
     * @param {string} text - Teks yang akan disalin
     * @param {string} type - Jenis teks (Nomor/Kode)
     */
    function copyToClipboard(text, type) {
        navigator.clipboard.writeText(text).then(() => {
            alert(`${type} berhasil disalin: ${text}`);
        }).catch(err => {
            console.error('Gagal menyalin teks: ', err);
        });
    }

    // ===== EVENT LISTENERS =====
    
    // Filter layanan saat pengguna mengetik di search bar
    searchInput.addEventListener('input', (e) => {
        const searchTerm = e.target.value.toLowerCase();
        const filteredServices = services.filter(service => 
            service.name.toLowerCase().includes(searchTerm)
        );
        renderServices(filteredServices);
    });
    
    // Tombol batalkan pesanan
    document.getElementById('cancel-order-btn').addEventListener('click', cancelOrder);
    
    // Tombol salin nomor
    document.getElementById('copy-number-btn').addEventListener('click', () => {
        const number = document.getElementById('virtual-number').textContent;
        copyToClipboard(number, 'Nomor');
    });

    // Tombol salin OTP
    document.getElementById('copy-otp-btn').addEventListener('click', () => {
        const code = document.getElementById('otp-code').textContent;
        copyToClipboard(code, 'Kode OTP');
    });

    // ===== INISIALISASI HALAMAN =====
    setTimeout(() => {
        renderServices(services);
        renderHistory();
    }, 1000); // Simulasi loading data
});
